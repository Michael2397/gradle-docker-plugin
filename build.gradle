import java.text.SimpleDateFormat

buildscript {
  repositories {
    maven { url 'http://kt3k.github.io/repository/maven/release' }
    maven { url "https://github.com/ben-manes/gradle-versions-plugin/raw/mvnrepo" }
    maven { url 'http://jcenter.bintray.com' }

    mavenLocal()
    mavenCentral()
  }

  dependencies {
    classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.5-beta-5'
  }
}

repositories {
  mavenLocal()
  maven { url 'http://dl.bintray.com/gesellix/docker-utils' }
  mavenCentral()
}

apply plugin: 'groovy'

apply plugin: 'idea'

apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply plugin: 'versions'

group = 'de.gesellix'

task sourcesJar(type: Jar) {
  dependsOn classes
  classifier 'sources'
  from sourceSets.main.allSource
}

idea {
  module {
    testSourceDirs += file('src/integrationTest/groovy')
    testSourceDirs += file('src/integrationTest/resources')
  }
}

sourceSets {
  integrationTest {
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
    groovy {
      srcDir 'src/integrationTest/groovy'
    }
    resources {
      srcDir 'src/integrationTest/resources'
    }
  }
}

cobertura.coverageSourceDirs = sourceSets.main.groovy.srcDirs

ext {
  artifactVersion = new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())
  bintrayDryRun = false
}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

def versionOverrides = [
    'commons-lang:commons-lang'                            : '2.4',
    'commons-logging:commons-logging'                      : '1.1.3',
    'org.apache.httpcomponents:httpclient'                 : '4.3',
    'org.apache.httpcomponents:httpmime'                   : '4.3',
    'org.codehaus.groovy:groovy-all'                       : '2.3.6',
    'org.codehaus.groovy.modules.http-builder:http-builder': '0.7.1',
    'org.hamcrest:hamcrest-core'                           : '1.3',
    'org.slf4j:slf4j-api'                                  : '1.6.6',
    'xerces:xmlParserAPIs'                                 : '2.6.2',
    'xerces:xercesImpl'                                    : '2.6.2',
    'xml-apis:xml-apis'                                    : '2.0.2'
]

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile 'de.gesellix:docker-client:2014-10-21T21-27-54'

  testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

configurations.all {
  resolutionStrategy {
    failOnVersionConflict()
    force versionOverrides.collect { k, v -> "$k:$v" }
  }
}

task integrationTest(type: Test) {
  group = 'verification'
  description = 'Runs the integration tests.'
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
}
integrationTest.mustRunAfter test
check.dependsOn integrationTest

task aggregateTestReports(type: TestReport) {
  destinationDir = test.reports.html.destination
  reportOn test, integrationTest
}
aggregateTestReports.mustRunAfter integrationTest
check.dependsOn aggregateTestReports

cobertura.coverageFormats = ['html', 'xml']

artifacts {
  archives sourcesJar
}

publishing {
  publications {
    gradleDockerPlugin(MavenPublication) {
      version artifactVersion
      from components.java
      artifact sourcesJar
    }
  }
}

logger.warn "uses TRAVIS_SECURE_ENV_VARS: ${System.env.TRAVIS_SECURE_ENV_VARS}."

bintray {
  user = System.env.BINTRAY_USER ?: project["bintray.user"]
  key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
  publications = ['gradleDockerPlugin']
  pkg {
    repo = 'docker-utils'
    name = 'gradle-docker-plugin'
    desc = 'A Docker plugin for Gradle'
    licenses = ['Apache-2.0']
    labels = ['docker', 'gradle']
    websiteUrl = 'https://github.com/gesellix-docker/gradle-docker-plugin'
    issueTrackerUrl = 'https://github.com/gesellix-docker/gradle-docker-plugin/issues'
    vcsUrl = 'https://github.com/gesellix-docker/gradle-docker-plugin.git'
    attributes = ['gradle-plugin': 'de.gesellix.docker:de.gesellix:gradle-docker-plugin']
    version = [
        name      : artifactVersion,
        attributes: ['gradle-plugin': 'de.gesellix.docker:de.gesellix:gradle-docker-plugin']
    ]
  }
  dryRun = bintrayDryRun
}
bintrayUpload.dependsOn build

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
  distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
